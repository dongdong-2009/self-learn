面向对象的三大特征：
	1、封装encapsulation
	2、继承inheritance
		特点：
			1、基于已存在的类来构建新类
			2、当从已存在类继承时，就重用了它的方法和成员，还可以添加新的方法和成员来定制新类以应对需求
			3、约定：从其它类导出的类叫子类，被导出的类叫父类
		类之间的关系
			1、Is-a：继承体现
			2、Has-a：组合体现，通过类中的成员来区分不同的对象
		继承的意义：
			1、代码重用
			2、体现不同的抽象层次
		父子类关系：
			1、父类更抽象，更一般
			2、子类更具体，更特殊
		继承方式：
			1、公有继承(重点)（Is-a关系）
				1、UML:
					介绍：统一建模语言，它是一个支持模型化和软件系统开发的图形
						  化语言，为软件开发的所有阶段提供模型化和可视化支持，包括
					      由需求分析到规格，到构造和配置，面向对象分析和设计方法
					      的发展在80年代末至90年代中出现了一个高潮，UML是这个高潮
					      的产物
					构成：
						1、UML的基本构造快
							3种基本的构造快：事物、关系和图
						2、支配这些构造快如何放置在一起的规则
						3、运用于整个语言的公有机制
				2、 protected
					子类可以直接调用父类的protected成员，不能直接调用父类的private成员
				3、在构造一个子类时，完成其父类部分的构造函数在父类的构造函数中完成
				4、构造与析构顺序相反
				5、继承时不指明是公有继承
				6、基类的public和protected成员的访问属性在子类中保持不变，但基类的private成员不可直接访问
				7、子类中的成员函数可以直接访问基类的public和protected成员，但不能直接访问基类的private成员
				8、通过派生类的对象只能访问基类的public成员
			2、私有继承
				1、私有继承的子类不能做基类所能做的所有成员
				2、里氏代换原则
				3、不是Is-a关系
				4、基类的public和protected成员在子类中都以private身份出现，子类的对象不能访问基类的任何成员
				5、派生类中的成员函数可以直接访问基类的public和protected成员，但不能访问基类的private成员
			3、多重继承
	3、多态polymorphism
